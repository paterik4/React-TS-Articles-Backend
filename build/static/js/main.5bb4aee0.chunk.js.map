{"version":3,"sources":["enviroment.ts","services/auth-header.ts","services/auth.service.ts","components/Home/Home.tsx","components/Navbar/Navbar.tsx","components/Register/RegisterPage.tsx","Api/API.ts","components/Profile/components/ProfileCard.tsx","components/Profile/Profile.tsx","components/Articles/components/AllArticles/components/AllArticles.tsx","components/Articles/components/AllArticles/Articles.tsx","components/Articles/components/SearchBar/SearchBar.tsx","components/Articles/components/Tags/components/TagCards.tsx","components/Articles/components/Tags/Tags.tsx","components/Articles/ArticlesPage.tsx","components/Articles/components/CreateArticle/Components/CreateArticle.tsx","components/Articles/components/CreateArticle/CreateArticlePage.tsx","components/Router/Link/index.tsx","components/NoMatch/index.tsx","components/Articles/components/ArticleDetails/components/ArticleDetails.tsx","components/Articles/components/ArticleDetails/ArticleDetailsPage.tsx","components/AdminPage/components/Admin.tsx","components/AdminPage/AdminPage.tsx","components/Articles/components/EditArticle/Components/EditArticle.tsx","components/Articles/components/EditArticle/EditArticlePage.tsx","components/Profile/components/EditProfile/components/EditProfile.tsx","components/Profile/components/EditProfile/EditProfilePage.tsx","components/Login/Components/Login.tsx","components/Login/LoginPage.tsx","App.tsx","index.tsx"],"names":["API_URL","adminUsers","authHeader","user","JSON","parse","localStorage","getItem","token","Authorization","exportAuthService","register","username","email","password","axios","post","login","then","response","data","console","log","setItem","stringify","accessToken","logout","removeItem","getCurrentUser","deleteUser","delete","headers","getUserInfo","createArticle","title","description","body","tagList","favoriteArticle","slug","unFavoriteArticle","createTag","tag","createComment","deleteComment","id","editArticle","put","deleteArticle","getUsers","get","editProfile","bio","image","useStyles","makeStyles","theme","pageSection","padding","HomePage","currentUser","classes","className","href","navbar","position","display","justifyContent","verticalAlign","margin","fontFamily","color","lineHeight","BrandText","fontSize","textDecoration","fontWeight","links","textAlign","Links","width","borderUnderline","height","background","borderColor","boxShadow","Navbar","history","useHistory","to","includes","onClick","push","window","location","reload","RegisterPage","props","validationSchema","Yup","shape","required","min","max","confirmPassword","oneOf","acceptTerms","useForm","resolver","yupResolver","handleSubmit","reset","errors","formState","onSubmit","status","toast","success","catch","err","error","type","message","htmlFor","Tooltip","exportApiFetchs","FetchData","url","useState","setData","isPending","setIsPending","setError","useEffect","abortCont","AbortController","fetch","signal","res","ok","Error","json","articles","name","abort","FetchTagsData","data2","isPending2","error2","getSearchedText","FetchArticlesBySlugData","FetchArticleData","article","GetArticlesCount","data3","isPending3","error3","articlesCount","FetchUsers","method","ProfileCard","users","useParams","find","u","Card","elevation","CardHeader","CardContent","CardMedia","Typography","List","dense","ListItem","ListItemText","primary","secondary","CardActions","profileContainer","Profile","GridItem","Link","card","maxWidth","borderRadius","Title","Author","AllArticles","selectedTag","Grid","container","map","item","author","CardActionArea","variant","component","gutterBottom","articlesContainer","Articles","searchText","length","root","alignItems","input","marginLeft","spacing","flex","iconButton","divider","SearchBar","handleChange","Paper","document","getElementById","InputBase","placeholder","inputProps","onChange","Divider","orientation","IconButton","tagsContainer","flexDirection","paper","palette","text","paperActive","tagsA","TagCards","tags","active","setActive","setArtTag","index","json2","i","newValue","newIndex","align","Tags","ArticlesPageContainer","ArticlesPage","setArticlesListDefault","setArticlesList","event","CreateArticle","newTags","CustomInputComponent","HtmlTooltip","withStyles","tooltip","backgroundColor","border","initialValues","toggle","split","touched","role","value","Fragment","as","CreateArticleContainer","CreateArticlePage","React","forwardRef","ref","innerRef","flexGrow","backgroundAttachment","backgroundPosition","backgroundRepeat","backgroundSize","minWidth","paddingLeft","marginBottom","NoMatch","useLocation","paragraph","pathname","RouterLink","ArticleDetails","articleAuthor","comments","comment","getTimeStamp","time","date","Date","toISOString","lastIndexOf","join","substring","e","favoriteCount","element","created","ArticleDetailsPage","accordion","accordionSummary","Admin","expanded","setExpanded","panel","isExpanded","sm","Accordion","AccordionSummary","expandIcon","AccordionDetails","setTimeout","AdminPage","EditArticle","formikRef","useRef","current","setFieldValue","goBack","EditArticlePage","EditProfile","test","userFound","undefined","disabled","EditProfilePage","Login","submitFN","LoginPage","App","exact","path","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.5bb4aee0.chunk.js","sourcesContent":["export const API_URL = 'http://localhost:3000/api/'\r\n\r\nexport const adminUsers = ['paterik4', 'admin123', 'IDDQD', 'iddqd']\r\n","export default function authHeader() {\r\n    const user = JSON.parse(localStorage.getItem('user') || '{}')\r\n\r\n    if (user && user.user.token) {\r\n        // for Node.js Express back-end\r\n        return { Authorization: 'Bearer ' + user.user.token }\r\n    } else {\r\n        return {}\r\n    }\r\n}\r\n","import axios from 'axios'\r\nimport { API_URL } from '../enviroment'\r\nimport authHeader from './auth-header'\r\n\r\nconst register = (username: string, email: string, password: string) => {\r\n    return axios.post(API_URL + 'users', {\r\n        username,\r\n        email,\r\n        password\r\n    })\r\n}\r\n\r\nconst login = (email: string, password: string) => {\r\n    return axios\r\n        .post(API_URL + 'login', {\r\n            email,\r\n            password\r\n        })\r\n        .then((response) => {\r\n            if (response.data) {\r\n                console.log('ADASDADADADAD')\r\n                localStorage.setItem('user', JSON.stringify(response.data))\r\n                localStorage.setItem('token', response.data.accessToken)\r\n            }\r\n\r\n            return response.data\r\n        })\r\n}\r\n\r\nconst getUserInfo = (email: string) => {\r\n    return axios.post(API_URL + 'user', { email }).then((response) => {\r\n        if (response.data) {\r\n            console.log('Get user info')\r\n            localStorage.setItem('user', JSON.stringify(response.data))\r\n            localStorage.setItem('token', response.data.accessToken)\r\n        }\r\n\r\n        return response.data\r\n    })\r\n}\r\n\r\nconst createArticle = (\r\n    title: string,\r\n    description: string,\r\n    body: string,\r\n    tagList: string[]\r\n) => {\r\n    return axios.post(\r\n        API_URL + 'articles',\r\n        {\r\n            title,\r\n            description,\r\n            body,\r\n            tagList\r\n        },\r\n        { headers: authHeader() }\r\n    )\r\n}\r\n\r\nconst editArticle = (\r\n    slug: any,\r\n    title: string,\r\n    description: string,\r\n    body: string,\r\n    tagList: string[]\r\n) => {\r\n    return axios.put(\r\n        API_URL + 'articles/' + slug,\r\n        {\r\n            title,\r\n            description,\r\n            body,\r\n            tagList\r\n        },\r\n        { headers: authHeader() }\r\n    )\r\n}\r\n\r\nconst deleteArticle = (slug: any) => {\r\n    return axios.delete(API_URL + 'articles/' + slug, { headers: authHeader() })\r\n}\r\n\r\nconst favoriteArticle = (slug: any) => {\r\n    return axios.post(\r\n        API_URL + 'articles/' + slug + '/favorite',\r\n        { slug },\r\n        {\r\n            headers: authHeader()\r\n        }\r\n    )\r\n}\r\n\r\nconst unFavoriteArticle = (slug: any) => {\r\n    return axios.delete(API_URL + 'articles/' + slug + '/favorite', {\r\n        headers: authHeader()\r\n    })\r\n}\r\n\r\nconst logout = () => {\r\n    localStorage.removeItem('user')\r\n    localStorage.setItem('tagIndex', '0')\r\n    localStorage.setItem('tagName', 'All')\r\n}\r\n\r\nconst getCurrentUser = () => {\r\n    return JSON.parse(localStorage.getItem('user')!)\r\n}\r\n\r\nconst deleteUser = (email: string) => {\r\n    return axios.delete(API_URL + 'users/' + email, { headers: authHeader() })\r\n}\r\n\r\nconst getUsers = () => {\r\n    return axios.get(API_URL + 'users', { headers: authHeader() })\r\n}\r\n\r\nconst editProfile = (\r\n    username: any,\r\n    email: string,\r\n    bio: string,\r\n    image: string\r\n) => {\r\n    return axios.put(\r\n        API_URL + 'user',\r\n        {\r\n            username,\r\n            email,\r\n            bio,\r\n            image\r\n        },\r\n        { headers: authHeader() }\r\n    )\r\n}\r\n\r\nconst createTag = (tag: string) => {\r\n    return axios.post(API_URL + 'tags/addNew', { tag })\r\n}\r\n\r\nconst createComment = (slug: any, body: string) => {\r\n    return axios.post(\r\n        API_URL + 'articles/' + slug + '/comments',\r\n        { body },\r\n        {\r\n            headers: authHeader()\r\n        }\r\n    )\r\n}\r\n\r\nconst deleteComment = (slug: any, id: any) => {\r\n    return axios.delete(API_URL + 'articles/' + slug + '/comments/' + id, {\r\n        headers: authHeader()\r\n    })\r\n}\r\n\r\nconst exportAuthService = {\r\n    register,\r\n    login,\r\n    logout,\r\n    getCurrentUser,\r\n    deleteUser,\r\n    getUserInfo,\r\n    createArticle,\r\n    favoriteArticle,\r\n    unFavoriteArticle,\r\n    createTag,\r\n    createComment,\r\n    deleteComment,\r\n    editArticle,\r\n    deleteArticle,\r\n    getUsers,\r\n    editProfile\r\n}\r\n\r\nexport default exportAuthService\r\n","import { makeStyles } from '@material-ui/core';\r\nimport React from 'react'\r\nimport exportAuthService from '../../services/auth.service';\r\n\r\nconst useStyles = makeStyles((theme: any) => ({\r\n    pageSection: {\r\n        padding: '4vh 0vw'\r\n    }\r\n}))\r\n\r\ninterface HomePageProps {\r\n\r\n}\r\n\r\nexport const HomePage: React.FC<HomePageProps> = () => {\r\n\r\n    const currentUser = exportAuthService.getCurrentUser()\r\n\r\n    const classes = useStyles();\r\n\r\n        return (\r\n            <div className={classes.pageSection}>\r\n            { currentUser ? ( <div>\r\n                    <h1 className=\"text-5xl py-10\">Welcome To SPA Articles App</h1>\r\n                    <p>You are logged in as {currentUser.user.username}.</p>\r\n                </div> )\r\n                :\r\n                ( <div>\r\n                <h1 className=\"text-5xl py-10\">Welcome To SPA Articles App</h1>\r\n                <p>To see the articles please <a className=\"text-red font-bold hover:text-red-light\" href=\"/register\">register</a> or \r\n                if you already have an account please <a className=\"text-red font-bold hover:text-red-light\" href=\"/login\">login</a>!</p>\r\n                </div> )\r\n            }\r\n            </div>\r\n        );\r\n}","import React from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { makeStyles } from '@material-ui/core'\r\nimport exportAuthService from '../../services/auth.service'\r\nimport { adminUsers } from '../../enviroment'\r\n\r\nconst useStyles = makeStyles((theme?: any) => ({\r\n    navbar: {\r\n        position: 'relative',\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        verticalAlign: 'middle',\r\n        margin: '4vh 8vw',\r\n        fontFamily: 'Poppins' || 'Helvetica Neue',\r\n        color: '#363537',\r\n        lineHeight: '6vh'\r\n    },\r\n    BrandText: {\r\n        margin: '0vh 0vw',\r\n        fontSize: '2.5em',\r\n        color: '#b42318',\r\n        textDecoration: 'none',\r\n        fontWeight: 600\r\n    },\r\n    links: {\r\n        display: 'inline-block',\r\n        verticalAlign: 'middle',\r\n        margin: '0 auto',\r\n        textAlign: 'center',\r\n        '& a': {\r\n            margin: '1vh 0vw',\r\n            textDecoration: 'none',\r\n            fontWeight: '600',\r\n            fontSize: '2rem',\r\n            padding: '0.5vh 0vw',\r\n            color: '#363537',\r\n            verticalAlign: 'middle',\r\n            '&:hover, &:focus, &:active':{\r\n                color: '#b42318'\r\n            }\r\n        }\r\n    },\r\n    Links: {\r\n        margin: '0vh 0vw 0vh 0vw',\r\n        width: '20vw',\r\n        '& a': {\r\n            margin: '1vh 0.5vw',\r\n            textDecoration: 'none',\r\n            fontWeight: 600,\r\n            fontSize: '1rem',\r\n            color: '#363537',\r\n            '&:hover, &:focus, &:active': {\r\n                color: '#b42318'\r\n            }\r\n        }\r\n    },\r\n    borderUnderline: {\r\n        width: '100vw',\r\n        height: '0.1vh',\r\n        background: '#B42318',\r\n        margin: '0 auto',\r\n        borderColor: '#B42318',\r\n        boxShadow: '0px 6px 10px 0.2px #b42318'\r\n    }\r\n}))\r\n\r\ninterface NavbarProps {}\r\n\r\nexport const Navbar: React.FC<NavbarProps> = () => {\r\n    const classes = useStyles()\r\n    const history = useHistory();\r\n\r\n    const currentUser = exportAuthService.getCurrentUser()\r\n\r\n    const logOut = () => {\r\n        exportAuthService.logout();\r\n        history.push('/login')\r\n        window.location.reload();\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <nav className={classes.navbar}>\r\n                <h1 className={classes.BrandText}>\r\n                    <Link to=\"/\">PWD Articles</Link>\r\n                </h1>\r\n                <div className={classes.Links}>\r\n                    {currentUser ? (\r\n                        <div>\r\n                            {adminUsers.includes(currentUser.user.username) &&\r\n                                <Link to=\"/admin\">Admin Page</Link>\r\n                            } \r\n                            <Link to=\"/articles\">Articles</Link>\r\n                            <Link to={\"/profile/\"+currentUser.user.username}>{'Profile'}</Link>\r\n                            <Link to=\"/login\" onClick={logOut}>\r\n                                Log out\r\n                            </Link>\r\n                        </div>\r\n                    ) : (\r\n                        <div>\r\n                            <Link to=\"/login\">Login</Link>\r\n                            <Link to=\"/register\">Register</Link>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </nav>\r\n            <div className={classes.borderUnderline}></div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useForm } from 'react-hook-form'\r\nimport { yupResolver } from '@hookform/resolvers/yup'\r\nimport * as Yup from 'yup'\r\nimport exportAuthService from '../../services/auth.service'\r\nimport { toast } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport { Tooltip } from '@material-ui/core'\r\n\r\ninterface RegisterPageProps {}\r\n\r\ntype UserSubmitForm = {\r\n    username: string\r\n    email: string\r\n    password: string\r\n    confirmPassword: string\r\n    acceptTerms: boolean\r\n}\r\n\r\nexport const RegisterPage: React.FC<RegisterPageProps> = (props: any) => {\r\n    const validationSchema = Yup.object().shape({\r\n        username: Yup.string()\r\n            .required('Username is required')\r\n            .min(5, 'Username must be at least 5 characters')\r\n            .max(20, 'Username must not exceed 20 characters'),\r\n        email: Yup.string()\r\n            .required('Email is required')\r\n            .email('Email is invalid'),\r\n        password: Yup.string()\r\n            .required('Password is required')\r\n            .min(6, 'Password must be at least 6 characters')\r\n            .max(20, 'Password must not exceed 20 characters'),\r\n        confirmPassword: Yup.string()\r\n            .required('Confirm Password is required')\r\n            .oneOf(\r\n                [Yup.ref('password'), null],\r\n                'Confirm Password does not match'\r\n            ),\r\n        acceptTerms: Yup.bool().oneOf([true], 'Accept Terms is required')\r\n    })\r\n\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        reset,\r\n        formState: { errors }\r\n    } = useForm<UserSubmitForm>({\r\n        resolver: yupResolver(validationSchema)\r\n    })\r\n\r\n    const onSubmit = (data: UserSubmitForm) => {\r\n        exportAuthService\r\n            .register(data.username, data.email, data.password)\r\n            .then((response) => {\r\n                if (response.status === 201) {\r\n                    props.history.push('/')\r\n                }\r\n            })\r\n            .then((response) => {\r\n                toast.success('Registration successful')\r\n            })\r\n            .catch((err) => {\r\n                toast.error('Something went wrong')\r\n            })\r\n    }\r\n\r\n    const currentUser = exportAuthService.getCurrentUser()\r\n\r\n    return (\r\n        <div className=\"align-middle sm:mx-auto sm:w-full sm:max-w-md py-16\">\r\n            <div className=\"register-form bg-white-light py-8 px-6 shadow-lg rounded-lg\">\r\n            {!currentUser? (\r\n                <>\r\n                <h1 className=\"text-4xl pt-2 pb-10 text-red\">\r\n                    Please Register!\r\n                </h1>\r\n                <form\r\n                    className=\"rounded align-middle space-y-4 bg-white-light\"\r\n                    onSubmit={handleSubmit(onSubmit)}\r\n                >\r\n                    <div className=\"form-group\">\r\n                        <label className=\"inputLabel\">Username</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            {...register('username')}\r\n                            className={`form-control ${\r\n                                errors.username ? 'is-invalid' : ''\r\n                            }`}\r\n                        />\r\n                        <div className=\"invalid-feedback\">\r\n                            {errors.username?.message}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label className=\"inputLabel\">Email</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            {...register('email')}\r\n                            className={`form-control ${\r\n                                errors.email ? 'is-invalid' : ''\r\n                            }`}\r\n                        />\r\n                        <div className=\"invalid-feedback\">\r\n                            {errors.email?.message}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label className=\"inputLabel\">Password</label>\r\n                        <input\r\n                            type=\"password\"\r\n                            {...register('password')}\r\n                            className={`form-control ${\r\n                                errors.password ? 'is-invalid' : ''\r\n                            }`}\r\n                        />\r\n                        <div className=\"invalid-feedback\">\r\n                            {errors.password?.message}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label className=\"inputLabel\">Confirm Password</label>\r\n                        <input\r\n                            type=\"password\"\r\n                            {...register('confirmPassword')}\r\n                            className={`form-control ${\r\n                                errors.confirmPassword ? 'is-invalid' : ''\r\n                            }`}\r\n                        />\r\n                        <div className=\"invalid-feedback\">\r\n                            {errors.confirmPassword?.message}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-check\">\r\n                        <div className=\"checkBoxText\">\r\n                            <input\r\n                                type=\"checkbox\"\r\n                                {...register('acceptTerms')}\r\n                                className={`form-check-input ${\r\n                                    errors.acceptTerms ? 'is-invalid' : ''\r\n                                }`}\r\n                            />\r\n                            <label\r\n                                htmlFor=\"acceptTerms\"\r\n                                className=\"form-check-label\"\r\n                            >\r\n                                I have read and agree to the Terms\r\n                            </label>\r\n                        </div>\r\n                        <div className=\"invalid-feedback\">\r\n                            {errors.acceptTerms?.message}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-buttons\">\r\n                        <button type=\"submit\" className=\"btn btn-primary\">\r\n                            Register\r\n                        </button>\r\n                        <Tooltip title=\"Resets the form\">\r\n                            <button\r\n                                type=\"button\"\r\n                                onClick={() => reset()}\r\n                                className=\"btn btn-warning\"\r\n                            >\r\n                                Reset\r\n                            </button>\r\n                        </Tooltip>\r\n                    </div>\r\n                </form>\r\n            </>\r\n            ) : (<h1>You already have account!</h1>)}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { useState, useEffect } from 'react'\r\n\r\nconst FetchData = (url: any) => {\r\n    const [data, setData] = useState([])\r\n    const [isPending, setIsPending] = useState(true)\r\n    const [error, setError] = useState(null)\r\n\r\n    useEffect(() => {\r\n        const abortCont = new AbortController()\r\n\r\n        fetch(url, { signal: abortCont.signal })\r\n            .then((res) => {\r\n                if (!res.ok) {\r\n                    // error coming back from server\r\n                    throw Error('could not fetch the data for that resource')\r\n                }\r\n                return res.json()\r\n            })\r\n            .then((data) => {\r\n                setIsPending(false)\r\n                setData(data.articles)\r\n                setError(null)\r\n                return data\r\n            })\r\n            .catch((err) => {\r\n                if (err.name === 'AbortError') {\r\n                    console.log('fetch aborted')\r\n                } else {\r\n                    // auto catches network / connection error\r\n                    setIsPending(false)\r\n                    setError(err.message)\r\n                }\r\n            })\r\n\r\n        // abort the fetch\r\n        return () => abortCont.abort()\r\n    }, [url])\r\n\r\n    return { data, isPending, error }\r\n}\r\n\r\nconst GetArticlesCount = (url: any) => {\r\n    const [data3, setData] = useState([])\r\n    const [isPending3, setIsPending] = useState(true)\r\n    const [error3, setError] = useState(null)\r\n\r\n    useEffect(() => {\r\n        const abortCont = new AbortController()\r\n\r\n        fetch(url, { signal: abortCont.signal })\r\n            .then((res) => {\r\n                if (!res.ok) {\r\n                    // error coming back from server\r\n                    throw Error('could not fetch the data for that resource')\r\n                }\r\n                return res.json()\r\n            })\r\n            .then((data) => {\r\n                setIsPending(false)\r\n                setData(data.articlesCount)\r\n                setError(null)\r\n                return data\r\n            })\r\n            .catch((err) => {\r\n                if (err.name === 'AbortError') {\r\n                    console.log('fetch aborted')\r\n                } else {\r\n                    // auto catches network / connection error\r\n                    setIsPending(false)\r\n                    setError(err.message)\r\n                }\r\n            })\r\n\r\n        // abort the fetch\r\n        return () => abortCont.abort()\r\n    }, [url])\r\n\r\n    return { data3, isPending3, error3 }\r\n}\r\n\r\nconst FetchArticleData = (url: any) => {\r\n    const [data, setData] = useState([])\r\n    const [isPending, setIsPending] = useState(true)\r\n    const [error, setError] = useState(null)\r\n\r\n    useEffect(() => {\r\n        const abortCont = new AbortController()\r\n\r\n        fetch(url, { signal: abortCont.signal })\r\n            .then((res) => {\r\n                if (!res.ok) {\r\n                    // error coming back from server\r\n                    throw Error('could not fetch the data for that resource')\r\n                }\r\n                return res.json()\r\n            })\r\n            .then((data) => {\r\n                setIsPending(false)\r\n                setData(data.article)\r\n                setError(null)\r\n                return data\r\n            })\r\n            .catch((err) => {\r\n                if (err.name === 'AbortError') {\r\n                    console.log('fetch aborted')\r\n                } else {\r\n                    // auto catches network / connection error\r\n                    setIsPending(false)\r\n                    setError(err.message)\r\n                }\r\n            })\r\n\r\n        // abort the fetch\r\n        return () => abortCont.abort()\r\n    }, [url])\r\n\r\n    return { data, isPending, error }\r\n}\r\n\r\nconst FetchTagsData = (url: any) => {\r\n    const [data2, setData] = useState([])\r\n    const [isPending2, setIsPending] = useState(true)\r\n    const [error2, setError] = useState(null)\r\n\r\n    useEffect(() => {\r\n        const abortCont = new AbortController()\r\n\r\n        fetch(url, { signal: abortCont.signal })\r\n            .then((res) => {\r\n                if (!res.ok) {\r\n                    // error coming back from server\r\n                    throw Error('could not fetch the data for that resource')\r\n                }\r\n                return res.json()\r\n            })\r\n            .then((data) => {\r\n                setIsPending(false)\r\n                setData(data)\r\n                setError(null)\r\n                return data\r\n            })\r\n            .catch((err) => {\r\n                if (err.name === 'AbortError') {\r\n                    console.log('fetch aborted')\r\n                } else {\r\n                    // auto catches network / connection error\r\n                    setIsPending(false)\r\n                    setError(err.message)\r\n                }\r\n            })\r\n\r\n        // abort the fetch\r\n        return () => abortCont.abort()\r\n    }, [url])\r\n\r\n    return { data2, isPending2, error2 }\r\n}\r\n\r\nconst FetchArticlesBySlugData = (url: any) => {\r\n    const [data2, setData] = useState([])\r\n    const [isPending2, setIsPending] = useState(true)\r\n    const [error2, setError] = useState(null)\r\n\r\n    useEffect(() => {\r\n        const abortCont = new AbortController()\r\n\r\n        fetch(url, { signal: abortCont.signal })\r\n            .then((res) => {\r\n                if (!res.ok) {\r\n                    // error coming back from server\r\n                    throw Error('could not fetch the data for that resource')\r\n                }\r\n                return res.json()\r\n            })\r\n            .then((data) => {\r\n                setIsPending(false)\r\n                setData(data)\r\n                setError(null)\r\n                return data\r\n            })\r\n            .catch((err) => {\r\n                if (err.name === 'AbortError') {\r\n                    console.log('fetch aborted')\r\n                } else {\r\n                    // auto catches network / connection error\r\n                    setIsPending(false)\r\n                    setError(err.message)\r\n                }\r\n            })\r\n\r\n        // abort the fetch\r\n        return () => abortCont.abort()\r\n    }, [url])\r\n\r\n    return { data2, isPending2, error2 }\r\n}\r\n\r\nconst getSearchedText = () => {\r\n    return JSON.parse(localStorage.getItem('searchText')!)\r\n}\r\n\r\nconst FetchUsers = (url: any) => {\r\n    const [data2, setData] = useState([])\r\n    const [isPending2, setIsPending] = useState(true)\r\n    const [error2, setError] = useState(null)\r\n    const user = JSON.parse(localStorage.getItem('user') || '{}')\r\n\r\n    useEffect(() => {\r\n        const abortCont = new AbortController()\r\n\r\n        fetch(url, {\r\n            method: 'GET',\r\n            signal: abortCont.signal,\r\n            headers: {\r\n                Authorization: 'Bearer ' + user.user.token\r\n            }\r\n        })\r\n            .then((res) => {\r\n                if (!res.ok) {\r\n                    // error coming back from server\r\n                    throw Error('could not fetch the data for that resource')\r\n                }\r\n                return res.json()\r\n            })\r\n            .then((data) => {\r\n                setIsPending(false)\r\n                setData(data)\r\n                setError(null)\r\n                return data\r\n            })\r\n            .catch((err) => {\r\n                if (err.name === 'AbortError') {\r\n                    console.log('fetch aborted')\r\n                } else {\r\n                    // auto catches network / connection error\r\n                    setIsPending(false)\r\n                    setError(err.message)\r\n                }\r\n            })\r\n\r\n        // abort the fetch\r\n        return () => abortCont.abort()\r\n    }, [url])\r\n\r\n    return { data2, isPending2, error2 }\r\n}\r\n\r\nconst exportApiFetchs = {\r\n    FetchData,\r\n    FetchTagsData,\r\n    getSearchedText,\r\n    FetchArticlesBySlugData,\r\n    FetchArticleData,\r\n    GetArticlesCount,\r\n    FetchUsers\r\n}\r\n\r\nexport default exportApiFetchs\r\n","import { CardContent, CardHeader, Card, makeStyles, CardMedia, Typography, List, ListItem, ListItemText, CardActions } from '@material-ui/core';\r\nimport React from 'react'\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { adminUsers } from '../../../enviroment';\r\n\r\nconst useStyles = makeStyles((theme: any) => ({}))\r\n\r\ninterface ProfileCardProps {\r\n    users: any\r\n}\r\n\r\nexport const ProfileCard: React.FC<ProfileCardProps> = ({users}) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    const { username } = useParams<{ username?: string }>()\r\n\r\n    const user = users.find((u: any) => u.username === username)\r\n\r\n        return (\r\n        <div className=\"py-10 justify-center align-items-center flex\">\r\n            {user? \r\n            <Card elevation={5} className=\"w-1/3 shadow-lg rounded-lg text-decoration:none text-left\">\r\n                    <CardHeader title={user.username + \"'s profile card\"}/>\r\n                    <div className=\"w-full h-px bg-red m-auto border-red border\"></div>\r\n                    <CardContent className=\"flex flex-row h-auto pt-2\">\r\n                        <CardMedia className=\"h-24 w-24 m-2 border border-red rounded-full\" title=\"avatar\" image={'/avatar.svg'}/>\r\n                        <Typography className=\"\">\r\n                        <List dense={false}>\r\n                            <ListItem>\r\n                                <ListItemText\r\n                                    primary={(adminUsers.includes(user.username) ?\r\n                                        <p className=\"flex\">{user.username} \r\n                                            <p className=\"mx-2 p-1 inline-block align-top rounded-full text-red text-xxs border border-red\">Admin</p>\r\n                                        </p> : <p>{user.username}</p>)}\r\n                                    secondary={'Username'}\r\n                                />\r\n                            </ListItem>\r\n                            <ListItem>\r\n                                <ListItemText\r\n                                    primary={user.email}\r\n                                    secondary={'Email'}\r\n                                />\r\n                            </ListItem>\r\n                            <ListItem>\r\n                                <ListItemText\r\n                                    primary={user.bio? user.bio : 'Bio not given yet.'}\r\n                                    secondary={'Bio'}\r\n                                />\r\n                            </ListItem>\r\n                        </List>\r\n                        </Typography>\r\n                        \r\n                    </CardContent>\r\n                    <div className=\"w-full h-0.25 bg-red m-auto border-gray-100 border\"></div>\r\n                    <CardActions className=\"flex justify-end mx-2\">\r\n                        <Link to={\"/profile/\"+user.username+\"/editprofile\"} >\r\n                            <button className=\"rounded-lg py-2 px-4 hover:bg-red-light hover:text-white font-poppins\">\r\n                                Edit Profile\r\n                            </button>\r\n                        </Link>\r\n                    </CardActions>\r\n            </Card>\r\n            : <p className=\"text-2xl\">Can't find profile</p>}\r\n        </div>\r\n        );\r\n}","import { makeStyles } from '@material-ui/core'\r\nimport React from 'react'\r\nimport exportApiFetchs from '../../Api/API'\r\nimport { API_URL } from '../../enviroment'\r\nimport { ProfileCard } from './components/ProfileCard'\r\n\r\nconst useStyles = makeStyles((theme: any) => ({\r\n    profileContainer:  {\r\n        padding: '0vh 8vw',\r\n        textAlign: 'center',\r\n        justifyContent: 'center'\r\n    }\r\n}))\r\n\r\ninterface ProfileProps {\r\n\r\n}\r\n\r\nexport const Profile: React.FC<ProfileProps> = ({}) => {\r\n\r\n    const classes = useStyles()\r\n\r\n    const {\r\n        data2: users,\r\n        isPending2,\r\n        error2\r\n    } = exportApiFetchs.FetchUsers(API_URL+\"users\")\r\n\r\n        return (\r\n        <div className={classes.profileContainer}>\r\n            {error2 && <div>{error2}</div>}\r\n            {isPending2 && <div>Loading...</div>}\r\n            {users? <ProfileCard users={users} /> : <p className=\"text-2xl\">This user is not exists or something went wrong.</p>}\r\n        </div>\r\n        );\r\n}","import {\r\n    Card,\r\n    CardActionArea,\r\n    CardContent,\r\n    Grid,\r\n    makeStyles,\r\n    Typography\r\n} from '@material-ui/core'\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst useStyles = makeStyles((theme: any) => ({\r\n    GridItem: {\r\n        margin: '0vh 0vw 0vh 0vw',\r\n        padding: '0vh 2vw 4vh 0vw'\r\n    },\r\n    Link: {\r\n        textDecoration: 'none',\r\n        fontFamily: 'Poppins'\r\n    },\r\n    card: {\r\n        width: '10vw',\r\n        maxWidth: '20vw',\r\n        borderRadius: '10px',\r\n        textDecoration: 'none'\r\n    },\r\n    Title: {\r\n        fontWeight: 500\r\n    },\r\n    Author: {\r\n        fontSize: '0.85rem'\r\n    }\r\n}))\r\n\r\ninterface AllArticlesProps {\r\n    articles: string[]\r\n    selectedTag: string\r\n}\r\n\r\nexport const AllArticles: React.FC<AllArticlesProps> = ({\r\n    articles,\r\n    selectedTag,\r\n}) => {\r\n    const classes = useStyles()\r\n\r\n    const currentUser = JSON.parse(localStorage.getItem('user')!)\r\n\r\n\r\n    return currentUser ? (\r\n        <div className=\"page-section\">\r\n            <div>\r\n                <Grid className=\"\" container>\r\n                    {articles ? (\r\n                        articles.map((article: any) =>\r\n                            article.tagList.includes(selectedTag) && (\r\n                                <Grid\r\n                                    className={classes.GridItem}\r\n                                    item\r\n                                    key={article.id}\r\n                                >\r\n                                    <Link\r\n                                        className={classes.Link}\r\n                                        to={`/articles/${article.slug}`}\r\n                                        onClick={() =>\r\n                                            localStorage.setItem(\r\n                                                'articleAuthor',\r\n                                                article.author.username\r\n                                            )\r\n                                        }\r\n                                    >\r\n                                        <Card\r\n                                            elevation={5}\r\n                                            className={classes.card}\r\n                                            onClick={() =>\r\n                                                console.log(article.slug)\r\n                                            }\r\n                                        >\r\n                                            <CardActionArea>\r\n                                                <CardContent>\r\n                                                    <Typography\r\n                                                        className={\r\n                                                            classes.Title\r\n                                                        }\r\n                                                        variant=\"h5\"\r\n                                                        component=\"h2\"\r\n                                                    >\r\n                                                        {article.title}\r\n                                                    </Typography>\r\n                                                    <Typography\r\n                                                        gutterBottom\r\n                                                        variant=\"h6\"\r\n                                                        color=\"textSecondary\"\r\n                                                        component=\"p\"\r\n                                                    >\r\n                                                        {article.description}\r\n                                                    </Typography>\r\n                                                    <Typography\r\n                                                        className={\r\n                                                            classes.Author\r\n                                                        }\r\n                                                        variant=\"caption\"\r\n                                                        color=\"textSecondary\"\r\n                                                        component=\"p\"\r\n                                                    >\r\n                                                        {article.author\r\n                                                            ? article.author.username\r\n                                                            : 'No author exists'}\r\n                                                    </Typography>\r\n                                                </CardContent>\r\n                                            </CardActionArea>\r\n                                        </Card>\r\n                                    </Link>\r\n                                </Grid>\r\n                            )\r\n                        )\r\n                    ) : (\r\n                        <div className=\"page-section\">\r\n                            <h1 className=\"animation-pulse\">Loading...</h1>\r\n                        </div>\r\n                    )}\r\n                </Grid>\r\n            </div>\r\n        </div>\r\n    ) : (\r\n        <div className=\"page-section\">\r\n            <h1>Only for authorized users</h1>\r\n        </div>\r\n    )\r\n}\r\n","import { makeStyles } from '@material-ui/core';\r\nimport React from 'react'\r\nimport exportApiFetchs from '../../../../Api/API';\r\nimport { API_URL } from '../../../../enviroment';\r\nimport { AllArticles } from './components/AllArticles';\r\nimport { ArticlesBySlug } from './components/ArticlesBySlug';\r\n\r\nconst useStyles = makeStyles((theme: any) => ({\r\n    articlesContainer:  {\r\n        padding: '0vh 0vw'\r\n    }\r\n}))\r\n\r\ninterface ArticlesProps {\r\n    searchText: string\r\n}\r\n\r\nexport const Articles: React.FC<ArticlesProps> = (searchText) => {\r\n\r\n    const classes = useStyles()\r\n\r\n    const {\r\n        data: articles,\r\n        error,\r\n        isPending\r\n    } = exportApiFetchs.FetchData(API_URL + 'articles')\r\n\r\n    /* console.log(articles) */\r\n\r\n    const {\r\n        data2: articlesBySlug,\r\n        error2,\r\n        isPending2\r\n    } = exportApiFetchs.FetchArticlesBySlugData(API_URL + 'articles/' + searchText)\r\n\r\n    const selectedTag = localStorage.getItem('tagName')!\r\n\r\n    /* console.log(articles) */\r\n\r\n        return (\r\n        <div className={classes.articlesContainer}>\r\n            {error && <div>{error}</div>}\r\n            {isPending && <div>Loading...</div>}\r\n            {isPending2 && <div>Loading...</div>}\r\n            {articles.length > 0 ? <AllArticles selectedTag={selectedTag} articles={articles} /> : \r\n            <p className=\"text-xl text-left\">There are no articles found. Create one to make it visible here.</p>}\r\n        </div>);\r\n}","import {\r\n    Divider,\r\n    IconButton,\r\n    InputBase,\r\n    makeStyles,\r\n    Paper\r\n} from '@material-ui/core'\r\nimport React from 'react'\r\nimport SearchIcon from '@material-ui/icons/Search'\r\nimport exportApiFetchs from '../../../../Api/API'\r\n\r\nconst useStyles = makeStyles((theme: any) => ({\r\n    root: {\r\n        padding: '0.5vh 0.25vw',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        width: 400,\r\n    },\r\n    input: {\r\n        marginLeft: theme.spacing(1),\r\n        flex: 1,\r\n    },\r\n    iconButton: {\r\n        padding: 10,\r\n        color: '#b42318'\r\n    },\r\n    divider: {\r\n        height: 28,\r\n        margin: 4\r\n    }\r\n}))\r\n\r\ninterface SearchBarProps {\r\n    handleChange: (event: any) => void\r\n}\r\n\r\nexport const SearchBar: React.FC<SearchBarProps> = ({handleChange}) => {\r\n    const classes = useStyles()\r\n\r\n    \r\n    const onLoad = () => {\r\n        const searchBar = document.getElementById('searchInput')!\r\n        const searchText = exportApiFetchs.getSearchedText()\r\n    }\r\n\r\n    return (\r\n        <Paper component=\"form\" className={classes.root}>\r\n            {onLoad()}\r\n            <InputBase\r\n                id=\"searchInput\"\r\n                className={classes.input}\r\n                placeholder=\"Search for articles\"\r\n                inputProps={{ 'aria-label': 'Search for articles' }}\r\n                onChange={handleChange}\r\n            />\r\n            <Divider className={classes.divider} orientation=\"vertical\" />\r\n            <IconButton\r\n                className={classes.iconButton}\r\n                aria-label=\"directions\"\r\n            >\r\n                <SearchIcon />\r\n            </IconButton>\r\n        </Paper>\r\n    )\r\n}\r\n","import { Grid, makeStyles, Paper, Typography } from '@material-ui/core'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nconst useStyles = makeStyles((theme: any) => ({\r\n    tagsContainer: {\r\n        padding: '0vh 0vw',\r\n        margin: '0 auto',\r\n        display: 'flex',\r\n        flexDirection: 'column'\r\n    },\r\n    paper: {\r\n        fontFamily: 'Poppins',\r\n        display: 'flex',\r\n        textDecoration: 'none',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        padding: '2vh 0vw',\r\n        textAlign: 'center',\r\n        width: '5vw',\r\n        maxWidth: '10vw',\r\n        margin: '0 auto',\r\n        color: theme.palette.text.primary,\r\n        borderRadius: '15px',\r\n        height: '4vh',\r\n        '&:hover': {\r\n            color: '#b42318',\r\n            boxShadow: '0px 0px 12px #b42318'\r\n        },\r\n        '&:focus': {\r\n            color: '#b42318',\r\n            boxShadow: '0px 0px 12px #b42318'\r\n        },\r\n        '&:active': {\r\n            color: '#b42318',\r\n            boxShadow: '0px 0px 12px #b42318'\r\n        }\r\n    },\r\n    paperActive: {\r\n        fontFamily: 'Poppins',\r\n        display: 'flex',\r\n        textDecoration: 'none',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        padding: '2vh 0vw',\r\n        textAlign: 'center',\r\n        width: '5vw',\r\n        maxWidth: '10vw',\r\n        margin: '0 auto',\r\n        color: '#b42318',\r\n        borderRadius: '15px',\r\n        boxShadow: '0px 0px 12px #b42318',\r\n        height: '4vh',\r\n        '&:hover': {\r\n            color: '#b42318',\r\n            boxShadow: '0px 0px 12px #b42318'\r\n        },\r\n        '&:focus': {\r\n            color: '#b42318',\r\n            boxShadow: '0px 0px 12px #b42318'\r\n        },\r\n        '&:active': {\r\n            color: '#b42318',\r\n            boxShadow: '0px 0px 12px #b42318'\r\n        }\r\n    },\r\n    container: {\r\n        maxWidth: '60vw',\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        padding: '0',\r\n        textAlign: 'left'\r\n    },\r\n    title: {\r\n        fontSize: '1.1rem',\r\n        fontFamily: 'Poppins'\r\n    },\r\n    tagsA: {\r\n        textDecoration: 'none'\r\n    }\r\n}))\r\n\r\ninterface TagCardsProps {\r\n    tags: string[]\r\n}\r\n\r\nexport const TagCards: React.FC<TagCardsProps> = ({ tags }) => {\r\n    const classes = useStyles()\r\n\r\n    const [active, setActive] = useState(0)\r\n    const [artTag, setArtTag] = useState('All')\r\n\r\n    useEffect(() => {\r\n        try {\r\n            const json = localStorage.getItem('tagIndex')\r\n            const index = JSON.parse(json!)\r\n\r\n            if (index) setActive(index)\r\n\r\n            const json2 = localStorage.getItem('tagName')\r\n\r\n            if (json2) setArtTag(json2)\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    }, [])\r\n\r\n    const handleChange = (newValue: any, newIndex: any) => {\r\n        /* console.log(newValue, newIndex) */\r\n        setActive(newIndex)\r\n        localStorage.setItem('tagIndex', newIndex)\r\n        localStorage.setItem('tagName', newValue)\r\n        window.location.reload()\r\n    }\r\n\r\n    return (\r\n        <div className={classes.tagsContainer}>\r\n            <Grid container className={classes.container}>\r\n                {tags ? (\r\n                    tags.map((item: any, i: number) => (\r\n                        <Grid key={item.id} className=\"pr-4 pb-4\" item>\r\n                            <p\r\n                                onClick={() => handleChange(item.tag, i)}\r\n                                className=\"cursor-pointer\"\r\n                            >\r\n                                <Paper\r\n                                    className={\r\n                                        i === active\r\n                                            ? classes.paperActive\r\n                                            : classes.paper\r\n                                    }\r\n                                    elevation={10}\r\n                                >\r\n                                    <Typography\r\n                                        className={classes.title}\r\n                                        align=\"center\"\r\n                                        variant=\"h3\"\r\n                                    >\r\n                                        {item.tag}\r\n                                    </Typography>\r\n                                </Paper>\r\n                            </p>\r\n                        </Grid>\r\n                    ))\r\n                ) : (\r\n                    <div>Loading...</div>\r\n                )}\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n","import { makeStyles } from '@material-ui/core';\r\nimport React from 'react'\r\nimport exportApiFetchs from '../../../../Api/API';\r\nimport { API_URL } from '../../../../enviroment';\r\nimport { TagCards } from './components/TagCards';\r\n\r\nconst useStyles = makeStyles((theme: any) => ({\r\n    tagsContainer:  {\r\n        padding: '4vh 0vw'\r\n    }\r\n}))\r\n\r\ninterface TagsProps {\r\n\r\n}\r\n\r\nexport const Tags: React.FC<TagsProps> = () => {\r\n\r\n    const classes = useStyles()\r\n\r\n    const {\r\n        data2: tags,\r\n        error2,\r\n        isPending2\r\n    } = exportApiFetchs.FetchTagsData(API_URL + 'tags')\r\n\r\n    /* console.log(tags) */\r\n        return (\r\n        <div className={classes.tagsContainer}>\r\n            {error2 && <div>{error2}</div>}\r\n            {isPending2 && <div>Loading...</div>}\r\n            <h1 className=\"text-left py-2\">Available tags:</h1>\r\n            {tags.length > 0 ? <TagCards tags={tags}/> : <p className=\"text-md text-left\">There are no tags available currently</p>}\r\n        </div>);\r\n}","import { makeStyles } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport exportApiFetchs from '../../Api/API';\r\nimport { API_URL } from '../../enviroment';\r\nimport { Articles } from './components/AllArticles/Articles';\r\nimport { SearchBar } from './components/SearchBar/SearchBar';\r\nimport { Tags } from './components/Tags/Tags';\r\n\r\nconst useStyles = makeStyles((theme: any) => ({\r\n    ArticlesPageContainer: {\r\n        margin: '4vh 8vw',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'left'\r\n    }\r\n}))\r\n\r\ninterface ArticlesPageProps {\r\n\r\n}\r\n\r\nexport const ArticlesPage: React.FC<ArticlesPageProps> = ({}) => {\r\n\r\n    const classes = useStyles()\r\n\r\n    const {\r\n        data: articles,\r\n        error,\r\n        isPending\r\n    } = exportApiFetchs.FetchData(API_URL + 'articles')\r\n\r\n    /* console.log(articles) */\r\n\r\n    const [input, setInput] = useState('');\r\n    const [articlesListDefault, setArticlesListDefault] = useState([]);\r\n    const [articlesList, setArticlesList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        setArticlesListDefault(articles)\r\n        setArticlesList(articles)\r\n    })\r\n\r\n    const handleChange = (event: any) => {\r\n/*         setInput(event.target.value)\r\n        event.target.value? \r\n        localStorage.setItem('searchText', event.target.value) :\r\n        localStorage.removeItem('searchText') */\r\n    }\r\n\r\n        return (\r\n            <div className={classes.ArticlesPageContainer}>\r\n            <div className=\"flex flex-row justify-between pr-40 items-center\">\r\n                <h1 className=\"text-left font-poppins text-4xl\">Articles</h1>\r\n                <Link to=\"/createArticle\">\r\n                    <div className=\"text-red border border-red rounded-lg p-2 w-auto align-middle hover:bg-red hover:text-white\"> Add new article</div>\r\n                </Link>\r\n            </div>\r\n            <p className=\"text-left font-poppins text-black-light text-md py-2\">You can search articles by title, by slug and with clicking one of the tags cards.</p>\r\n            <SearchBar handleChange={handleChange} />\r\n            <Tags />\r\n            <Articles searchText={input} />\r\n        </div>\r\n        );\r\n}","import { Tooltip, Typography } from '@material-ui/core'\r\nimport React from 'react'\r\nimport exportAuthService from '../../../../../services/auth.service'\r\nimport * as Yup from 'yup'\r\nimport { toast } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Formik, Form, Field } from 'formik'\r\nimport exportApiFetchs from '../../../../../Api/API'\r\nimport { API_URL } from '../../../../../enviroment'\r\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\r\nimport { withStyles } from '@material-ui/styles'\r\n\r\ninterface CreateArticleProps {}\r\n\r\nexport const CreateArticle: React.FC<CreateArticleProps> = () => {\r\n    const history = useHistory()\r\n\r\n    const validationSchema = Yup.object().shape({\r\n        title: Yup.string()\r\n            .required('Title is required')\r\n            .min(10, 'Title must be at least 10 characters')\r\n            .max(40, 'Description must not exceed 40 characters'),\r\n        description: Yup.string()\r\n            .required('Description is required')\r\n            .min(20, 'Description must be at least 20 characters')\r\n            .max(60, 'Description must not exceed 60 characters'),\r\n        body: Yup.string()\r\n            .required('Article body is required')\r\n            .min(40, 'Article body must be at least 40 characters')\r\n            .max(250, 'Article body must not exceed 250 characters'),\r\n        tagList: Yup.array(),\r\n        newTags: Yup.string()\r\n    })\r\n\r\n    const {\r\n        data2: tags,\r\n        error2,\r\n        isPending2\r\n    } = exportApiFetchs.FetchTagsData(API_URL + 'tags')\r\n\r\n    const onSubmit = (data: any) => {\r\n        const addNewTags = (newTags: string) => {\r\n            const allTagExists = tags.find((tag: any) => tag.tag === 'All')\r\n            !allTagExists && exportAuthService.createTag('All')\r\n            const newTagsArr = newTags.split(',')\r\n            newTagsArr.map((tag: any) => \r\n                exportAuthService.createTag(tag)\r\n            )\r\n        }\r\n        addNewTags(data.newTags)\r\n        const tagList = data.tagList\r\n        tagList.push('All')\r\n        data.newTags.length > 0 && tagList.push(data.newTags)\r\n        exportAuthService\r\n            .createArticle(\r\n                data.title,\r\n                data.description,\r\n                data.body,\r\n                tagList\r\n            )\r\n            .then((response) => {\r\n                if (response.status === 201) {\r\n                    history.push('/articles')\r\n                }\r\n            })\r\n            .then((response) => {\r\n                toast.success('Article created successfully')\r\n            })\r\n            .catch((err) => {\r\n                toast.error('Something went wrong')\r\n            })\r\n    }\r\n\r\n    const CustomInputComponent = (props: any) => (\r\n        <textarea\r\n            className=\"resize-y max-h-52 min-h-32 my-custom-input\"\r\n            {...props}\r\n        />\r\n    )\r\n\r\n    const HtmlTooltip = withStyles((theme: any) => ({\r\n        tooltip: {\r\n            backgroundColor: '#363537',\r\n            color: '#F7F7F7',\r\n            maxWidth: 350,\r\n            fontSize: '1rem',\r\n            border: '1px solid #F7F7F7',\r\n        },\r\n    }))(Tooltip);\r\n\r\n    return (\r\n        <div className=\"pt-20\">\r\n            <h1 className=\"text-2xl text-black\">Create new Article</h1>\r\n            <p className=\"text-black-light\">Fill all the required(*) fields!</p>\r\n            <Formik\r\n                initialValues={{\r\n                    title: '',\r\n                    description: '',\r\n                    body: '',\r\n                    toggle: false,\r\n                    tagList: [],\r\n                    newTags: '',\r\n                }}\r\n                validationSchema={validationSchema}\r\n                onSubmit={onSubmit}\r\n            >\r\n                {({ errors, touched }) => (\r\n                    <Form>\r\n                        <div className=\"grid grid-rows-5 grid-flow-col gap-4 auto-rows-max pt-10 px-40\">\r\n                            <div className=\"form-group\">\r\n                                <label className=\"inputLabel\">Title*</label>\r\n                                <Field name=\"title\" />\r\n                                {errors.title && touched.title ? (\r\n                                    <div className=\"invalid-feedback\">\r\n                                        {errors.title}\r\n                                    </div>\r\n                                ) : null}\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label className=\"inputLabel\">\r\n                                    Description*\r\n                                </label>\r\n                                <Field name=\"description\" />\r\n                                {errors.description && touched.description ? (\r\n                                    <div className=\"invalid-feedback\">\r\n                                        {errors.description}\r\n                                    </div>\r\n                                ) : null}\r\n                            </div>\r\n                            <div className=\"form-check\">\r\n                                <p className=\"text-left pb-2\">Tags (Optional)</p>\r\n                                <div\r\n                                    role=\"group\"\r\n                                    aria-labelledby=\"checkbox-group\"\r\n                                    className=\"form-check2\"\r\n                                >\r\n                                    {tags ? (\r\n                                        tags.map(\r\n                                            (item: any, i: number) =>\r\n                                                item.tag !== 'All' && (\r\n                                                    <div\r\n                                                        key={i}\r\n                                                        className=\"checkBoxText\"\r\n                                                    >\r\n                                                        <Field\r\n                                                            type=\"checkbox\"\r\n                                                            name=\"tagList\"\r\n                                                            value={item.tag}\r\n                                                        />\r\n                                                        <label htmlFor=\"checkbox\">\r\n                                                            {item.tag}\r\n                                                        </label>\r\n                                                    </div>\r\n                                                )\r\n                                        )\r\n                                    ) : (\r\n                                        <React.Fragment>\r\n                                            {error2 && <div>{error2}</div>}\r\n                                            {isPending2 && <div>Loading...</div>}\r\n                                        </React.Fragment>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label className=\"inputLabel\">\r\n                                    Add new tag (Optional)\r\n                                    <HtmlTooltip \r\n                                    title={\r\n                                        <React.Fragment>\r\n                                            <Typography className=\"font-bold\">\r\n                                                You can add one tag by typing:\r\n                                            </Typography>\r\n                                            <Typography className=\"text=\">\r\n                                                e.g: TagName\r\n                                            </Typography>\r\n                                            <Typography className=\"font-bold\">\r\n                                                or you can add 2 or more tags by typing:\r\n                                            </Typography>\r\n                                            <Typography className=\"text=\">\r\n                                                e.g: TagName,TagName2,TagName3\r\n                                            </Typography>\r\n                                        </React.Fragment>\r\n                                    }>\r\n                                        <InfoOutlinedIcon />\r\n                                    </HtmlTooltip>\r\n                                </label>\r\n                                <Field name=\"newTags\" />\r\n                            </div>\r\n                            <div className=\"form-group row-span-3\">\r\n                                <label className=\"inputLabel\">\r\n                                    Article Body*\r\n                                </label>\r\n                                <Field name=\"body\" as={CustomInputComponent} />\r\n                                {errors.body && touched.body ? (\r\n                                    <div className=\"invalid-feedback\">\r\n                                        {errors.body}\r\n                                    </div>\r\n                                ) : null}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"flex flex-row items-center justify-center\">\r\n                            <button\r\n                                type=\"submit\"\r\n                                className=\"border-2 border-red rounded-md px-6 py-2 w-auto text-red font-bold hover:bg-red hover:text-white\"\r\n                            >\r\n                                Add Article\r\n                            </button>\r\n                        </div>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </div>\r\n    )\r\n}\r\n","import { makeStyles } from '@material-ui/core';\r\nimport React from 'react'\r\nimport { CreateArticle } from './Components/CreateArticle';\r\n\r\nconst useStyles = makeStyles((theme: any) => ({\r\n    CreateArticleContainer: {\r\n        padding: '0vh 0vw',\r\n    }\r\n}))\r\n\r\ninterface CreateArticlePageProps {\r\n\r\n}\r\n\r\nexport const CreateArticlePage: React.FC<CreateArticlePageProps> = ({}) => {\r\n\r\n    const classes = useStyles()\r\n        return (\r\n        <div className={classes.CreateArticleContainer}>\r\n            <CreateArticle />\r\n        </div>\r\n        );\r\n}","import React from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\n\nconst Link = React.forwardRef((props: any, ref:any) => (\n\t<RouterLink {...props} innerRef={ref} />\n));\n\nexport default Link;\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport Link from '@material-ui/core/Link'\nimport { makeStyles } from '@material-ui/core/styles'\nimport RouterLink from '../Router/Link'\nimport Grid from '@material-ui/core/Grid'\nimport { useLocation } from 'react-router-dom'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        width: '100vw',\n        height: '85vh',\n        background: 'url(/404Page.svg) center center',\n        backgroundAttachment: 'fixed',\n        backgroundPosition: 'center',\n        backgroundRepeat: 'no-repeat',\n        backgroundSize: 'cover',\n    },\n    paper: {\n        minWidth: '15vw',\n        maxWidth: '30vw',\n        padding: theme.spacing(8),\n        textAlign: 'center',\n        margin: '0 auto',\n        color: theme.palette.text.primary,\n        boxShadow: '0px 0px 12px #ccc',\n        borderRadius: '15px'\n    },\n    container: {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'flex-start',\n        textAlign: 'center',\n        alignItems: 'center',\n        margin: '0 auto',\n        paddingLeft: '20vw'\n    },\n    title: {\n        marginBottom: theme.spacing(2)\n    }\n}))\n\ninterface NoMatchProps {\n\n}\n\nexport const NoMatch: React.FC<NoMatchProps> = () => {\n    const classes = useStyles()\n    let location = useLocation()\n\n    return (\n        <div className={classes.root}>\n            <Grid container className={classes.container}>\n                <Grid item>\n                    <Paper className={classes.paper} elevation={10}>\n                        <Typography\n                            className={classes.title}\n                            align=\"center\"\n                            variant=\"h2\"\n                        >\n                            404\n                        </Typography>\n                        <Typography paragraph align=\"center\">\n                            {'Nothing Found.'}\n                        </Typography>\n                        <Typography paragraph align=\"center\">\n                            No match for <code>{location.pathname}</code>\n                        </Typography>\n                        <Typography align=\"center\">\n                            <Link component={RouterLink} to=\"/\">\n                                {'Go back to the HomePage'}\n                            </Link>\n                        </Typography>\n                    </Paper>\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\n\nexport default NoMatch\n","import React from 'react'\r\nimport StarBorderIcon from '@material-ui/icons/StarBorder'\r\nimport StarIcon from '@material-ui/icons/Star'\r\nimport exportAuthService from '../../../../../services/auth.service'\r\nimport {Link, useHistory, useParams } from 'react-router-dom'\r\nimport { toast } from 'react-toastify'\r\nimport { Formik, Form, Field } from 'formik'\r\nimport * as Yup from 'yup'\r\nimport { adminUsers } from '../../../../../enviroment'\r\n\r\ninterface ArticleDetailsProps {\r\n    article: any\r\n}\r\n\r\nexport const ArticleDetails: React.FC<ArticleDetailsProps> = ({ article }) => {\r\n    const articleAuthor = localStorage.getItem('articleAuthor')\r\n\r\n    const { slug } = useParams<{ slug?: string }>()\r\n\r\n    const comments = article.comments!\r\n\r\n    console.log(comments)\r\n\r\n    const history = useHistory()\r\n\r\n    const favoriteArticle = () => {\r\n        exportAuthService\r\n            .favoriteArticle(slug)\r\n            .then((response) => {\r\n                if (response.status === 201) {\r\n                    window.location.reload()\r\n                }\r\n            })\r\n            .then(() => toast.success('Article successfully favorited'))\r\n            .catch((e) => toast.error(e.message))\r\n    }\r\n\r\n    const unFavoriteArticle = () => {\r\n        exportAuthService\r\n            .unFavoriteArticle(slug)\r\n            .then(() => window.location.reload())\r\n            .then(() => toast.success('Article successfully Unfavorited'))\r\n            .catch((e) => toast.error(e.message))\r\n    }\r\n\r\n    const deleteArticle = () => {\r\n        exportAuthService.deleteArticle(slug).then(response => {\r\n            if(response.status === 200)\r\n            {\r\n                toast.success(\"Article successfully deleted\")\r\n            }\r\n        }).then(() => {\r\n            history.push(\"/articles\")\r\n        }).catch(e => toast.error(e.message))\r\n        \r\n    }\r\n\r\n    const deleteComment = (id: any) => {\r\n        exportAuthService.deleteComment(slug, id).then(response => {\r\n            if(response.status === 200)\r\n            {\r\n                toast.success(\"Comment successfully deleted\")\r\n            }\r\n        }).then(() => {\r\n            history.push(\"/articles/\"+slug)\r\n            window.location.reload()\r\n        }).catch(e => toast.error(e.message))\r\n    }\r\n\r\n    const handleSubmit = (data: any) => {\r\n        exportAuthService\r\n            .createComment(slug, data.comment)\r\n            .then((response) => {\r\n                if (response.status === 201) {\r\n                    history.push('/articles/'+slug)\r\n                }\r\n            })\r\n            .then((response) => {\r\n                toast.success('Article created successfully')\r\n            })\r\n            .catch((err) => {\r\n                toast.error('Something went wrong')\r\n            }).then(() => window.location.reload())\r\n            console.log(slug + \"  ----------  \" + data.comment)\r\n    }\r\n\r\n    const validationSchema = Yup.object().shape({\r\n        comment: Yup.string()\r\n            .required('Comment is required')\r\n            .min(10, 'Comment must be at least 10 characters')\r\n            .max(200, 'Comment must not exceed 200 characters')\r\n    })\r\n\r\n    const getTimeStamp = (time: any) => {\r\n        const date = new Date(time)\r\n        let location = date.toISOString().lastIndexOf('.')\r\n        let dateFormat = date.toISOString().split('-').join('.').split('T').join('  ')\r\n        let finalFormat = dateFormat.substring(0, location+1)\r\n        return finalFormat\r\n    }\r\n\r\n    const user = exportAuthService.getCurrentUser()\r\n\r\n    return (\r\n        <div className=\"py-10 px-40 max-w-screen-2xl\">\r\n            {article ? (\r\n                <div className=\"flex flex-col text-left\">\r\n                    <p className=\"text-4xl pb-10\">Article Details</p>\r\n                    <div className=\"flex items-center justify-between align-middle\">\r\n                        <p className=\"text-3xl\">{article.title}</p>\r\n                        <div className=\"flex items-center justify-end\">\r\n                            {user.user.username === articleAuthor && \r\n                            <React.Fragment>\r\n                                <Link to={\"/articles/\"+slug+\"/editArticle\"}>\r\n                                    <p className=\"cursor-pointer px-2 mr-4 rounded-lg border border-red text-red hover:text-white hover:bg-red\"\r\n                                    >Edit article</p>\r\n                                </Link>\r\n                                    <p \r\n                                    className=\"cursor-pointer px-2 mr-4 rounded-lg border border-red text-red hover:text-white hover:bg-red\"\r\n                                    onClick={deleteArticle}\r\n                                    >\r\n                                        Delete article\r\n                                    </p>\r\n                            </React.Fragment>}\r\n                            <p className=\"text-right\">\r\n                                {article.favoriteCount} users favorited\r\n                            </p>\r\n                            <p\r\n                                onClick={favoriteArticle}\r\n                                className=\"rounded-md p-1 pr-2 text-orange text-sm flex items-center align-middle cursor-pointer hover:bg-gray-200\"\r\n                            >\r\n                                <StarIcon fontSize=\"medium\" className=\"\" />\r\n                                Favorite\r\n                            </p>\r\n                            <p\r\n                                onClick={unFavoriteArticle}\r\n                                className=\"rounded-md p-1 pr-2 text-black text-sm flex items-center align-middle cursor-pointer hover:bg-gray-200\"\r\n                            >\r\n                                <StarBorderIcon\r\n                                    fontSize=\"medium\"\r\n                                    className=\"\"\r\n                                />\r\n                                Unfavorite\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                    <p className=\"text-2xl pt-10 pb-2\">{article.description}</p>\r\n                    <div className=\"h-px border border-red w-full\"></div>\r\n                    <p className=\"text-lg py-10\">{article.body}</p>\r\n                    <div className=\"flex pt-10 align-middle\">\r\n                        <p className=\"pr-2 py-1\">Tags:</p>\r\n                        {article.tagList &&\r\n                            article.tagList.map((element: any) => (\r\n                                <p\r\n                                    key={element}\r\n                                    className=\"mx-2 py-1 px-4 w-auto align-middle text-center text-red border border-red rounded-full\"\r\n                                >\r\n                                    {element}\r\n                                </p>\r\n                            ))}\r\n                    </div>\r\n                    <div className=\"pt-10 pb-2 text-sm text-black-light\">\r\n                        <p>Author: {articleAuthor}</p>\r\n                    </div>\r\n                    <div className=\"h-px border border-black-light w-full\"></div>\r\n                    <div className=\"pt-5 space-y-4 w-full\">\r\n                        <Formik\r\n                            onSubmit={handleSubmit}\r\n                            initialValues={{\r\n                                comment: ''\r\n                            }}\r\n                            validationSchema={validationSchema}\r\n                            className=\"flex\"\r\n                        >\r\n                            {({ errors }) => (\r\n                                <Form className=\"w-full\">\r\n                                    <Field\r\n                                        className=\"mr-4\"\r\n                                        name=\"comment\"\r\n                                        placeholder=\"Write comment\"\r\n                                    />\r\n                                    <button\r\n                                        className=\"border border-red text-red py-1 px-2 rounded-lg hover:text-white hover:bg-red\"\r\n                                        type=\"submit\"\r\n                                    >\r\n                                        Comment\r\n                                    </button>\r\n                                    {errors.comment ? (\r\n                                        <div className=\"invalid-feedback\">\r\n                                            {errors.comment}\r\n                                        </div>\r\n                                    ) : null}\r\n                                </Form>\r\n                            )}\r\n                        </Formik>\r\n                        <p>Comments ({comments ? comments.length : 0})</p>\r\n                        <div>\r\n                            {comments ? (\r\n                                comments.map((comment: any) => (\r\n                                    <div className=\"flex flex-col gap-2 pb-8\">\r\n                                        <p>{comment.body}</p>\r\n                                        <div className=\"flex gap-4\">\r\n                                            <p>{getTimeStamp(comment.created)}</p>\r\n                                            <p>Written by: {comment.author.username}</p>\r\n                                            {(user.user.username === comment.author.username || adminUsers.includes(user.user.username)) &&  \r\n                                            <React.Fragment>\r\n{/*                                                 <Link to={\"/articles/\"+slug+\"/editArticle\"}>\r\n                                                    <p className=\"cursor-pointer px-2 mr-4 rounded-lg border border-red text-red hover:text-white hover:bg-red\"\r\n                                                    >Edit comment</p>\r\n                                                </Link> */}\r\n                                                    <p \r\n                                                    className=\"cursor-pointer px-2 mr-4 rounded-lg border border-red text-red hover:text-white hover:bg-red\"\r\n                                                    onClick={() => {deleteComment(comment.id)}}\r\n                                                    >\r\n                                                        Delete comment\r\n                                                    </p>\r\n                                            </React.Fragment>}\r\n                                        </div>\r\n                                        <p className=\"h-px border border-red\"></p>\r\n                                    </div>\r\n                                    \r\n                                ))\r\n                            ) : (\r\n                                <p>There are no comments for this article</p>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                <div>Loading...</div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useParams } from 'react-router-dom';\r\nimport exportApiFetchs from '../../../../Api/API';\r\nimport { API_URL } from '../../../../enviroment';\r\nimport exportAuthService from '../../../../services/auth.service';\r\nimport { ArticleDetails } from './components/ArticleDetails';\r\n\r\ninterface ArticleDetailsPageProps {\r\n\r\n}\r\n\r\nexport const ArticleDetailsPage: React.FC<ArticleDetailsPageProps> = ({}) => {\r\n\r\n        const { slug } = useParams<{slug?: string}>()\r\n\r\n        const {\r\n                data: article,\r\n                error,\r\n                isPending\r\n        } = exportApiFetchs.FetchArticleData(API_URL + 'articles/' + slug )\r\n\r\n        /* console.log(slug) */\r\n        /* console.log(article) */\r\n\r\n        const user = exportAuthService.getCurrentUser()\r\n\r\n        return (\r\n        <div>\r\n                {error && <div>{error}</div>}\r\n                {isPending && <div>Loading...</div>}\r\n                {user ? <ArticleDetails article={article} /> : <p className=\"text-3xl py-10\">Authorized access only!</p>}\r\n        </div>\r\n        );\r\n}","import {\r\n    Accordion,\r\n    AccordionDetails,\r\n    AccordionSummary,\r\n    Grid,\r\n    makeStyles,\r\n} from '@material-ui/core'\r\nimport React from 'react'\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\r\nimport { useHistory } from 'react-router-dom'\r\nimport exportAuthService from '../../../services/auth.service'\r\nimport { toast } from 'react-toastify'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    accordion: {\r\n    },\r\n    accordionSummary: {\r\n    }\r\n}))\r\n\r\ninterface AdminProps {\r\n    users: any\r\n    articles: any\r\n}\r\n\r\nexport const Admin: React.FC<AdminProps> = ({ users, articles }) => {\r\n    const classes = useStyles()\r\n    const [expanded, setExpanded] = React.useState('')\r\n    const history = useHistory()\r\n\r\n    const currentUser = exportAuthService.getCurrentUser()\r\n\r\n    const handleChange = (panel: any) => (event: any, isExpanded: any) => {\r\n        setExpanded(isExpanded ? panel : false)\r\n    }\r\n\r\n    const deleteUser = (email: string, username: string) => {\r\n        exportAuthService.deleteUser(email).then(response => {\r\n            if(response.status === 200)\r\n            {\r\n                toast.success(username + \"'s profile has been deleted\")\r\n                setTimeout(() => window.location.reload(), 1000)\r\n            }\r\n        }).catch(e=> {\r\n            toast.success(e.message)\r\n        })\r\n    }\r\n\r\n    const deleteArticle = (slug: any) => {\r\n        exportAuthService.deleteArticle(slug).then(response => {\r\n            if(response.status === 200)\r\n            {\r\n                toast.success(\"Article successfully deleted\")\r\n            }\r\n        }).then(() => {\r\n            setTimeout(() => window.location.reload(), 1000)\r\n        }).catch(e => toast.error(e.message))\r\n    }\r\n\r\n    return (\r\n        <div className=\"w-full\">\r\n            <Grid spacing={4} container>\r\n                <Grid item sm={6}>\r\n                    {users ? (\r\n                        users.map((user: any) => (\r\n                            <Accordion\r\n                                expanded={expanded === user.id}\r\n                                onChange={handleChange(user.id)}\r\n                                key={user.id}\r\n                                className={classes.accordion}\r\n                            >\r\n                                <AccordionSummary\r\n                                    expandIcon={<ExpandMoreIcon />}\r\n                                    className={classes.accordionSummary}\r\n                                    aria-controls=\"panel1bh-content\"\r\n                                    id={user.id}\r\n                                >\r\n                                    <p className=\"\">{user.username}</p>\r\n                                </AccordionSummary>\r\n                                <AccordionDetails>\r\n                                <div className=\"flex flex-col justify-start text-left space-y-2\">\r\n                                        <p className=\"pb-1\">{user.email}</p>\r\n                                        <p className=\"pb-1\">{user.bio? user.bio : \"No bio given yet.\"}</p>\r\n                                        {user.username !== currentUser.user.username ?\r\n                                        <React.Fragment>\r\n                                        <p className=\"h-px border border-gray-200 w-full\"></p>\r\n                                        <div className=\"flex space-x-8 pt-1\">\r\n                                                <button \r\n                                                className=\"text-red transform hover:scale-125\"\r\n                                                onClick={() => {deleteUser(user.email, user.username)}}\r\n                                                >\r\n                                                    Delete\r\n                                                </button> \r\n                                        </div>\r\n                                        </React.Fragment>\r\n                                        : null}\r\n                                    </div>\r\n                                </AccordionDetails>\r\n                            </Accordion>\r\n                        ))\r\n                    ) : (\r\n                        <p>Loading... </p>\r\n                    )}\r\n                </Grid>\r\n                <Grid item sm={6}>\r\n                    {articles.length > 0 && articles? (\r\n                        articles.map((article: any) => (\r\n                            <Accordion\r\n                                expanded={expanded === article.slug}\r\n                                onChange={handleChange(article.slug)}\r\n                                key={article.id}\r\n                            >\r\n                                <AccordionSummary\r\n                                    expandIcon={<ExpandMoreIcon />}\r\n                                    aria-controls=\"panel1bh-content\"\r\n                                    id={article.id}\r\n                                >\r\n                                    <p className=\"\">{article.title}</p>\r\n                                </AccordionSummary>\r\n                                <AccordionDetails>\r\n                                    <div className=\"flex flex-col justify-start text-left\">\r\n                                        <p className=\"pb-1\">{article.description}</p>\r\n                                        <p className=\"h-px border border-red w-full\"></p>\r\n                                        <p className=\"py-5\">{article.body}</p>\r\n                                        <p className=\"pb-5\">{article.author.username}</p>\r\n                                        <p className=\"h-px border border-gray-200 w-full\"></p>\r\n                                        <div className=\"flex space-x-8 pt-1\">\r\n                                            <button \r\n                                            className=\"text-blue-600 transform hover:scale-125\"\r\n                                            onClick={() => history.push(\"/articles/\"+article.slug+\"/editArticle\")}\r\n                                            >\r\n                                                Edit\r\n                                            </button>\r\n                                            <button \r\n                                            className=\"text-red transform hover:scale-125\"\r\n                                            onClick={() => {deleteArticle(article.slug)}}\r\n                                            >\r\n                                                Delete\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                </AccordionDetails>\r\n                            </Accordion>\r\n                        ))\r\n                    ) : (\r\n                        <p className=\"text-xl\">There are no articles available.</p>\r\n                    )}\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport exportApiFetchs from '../../Api/API';\r\nimport { adminUsers, API_URL } from '../../enviroment';\r\nimport exportAuthService from '../../services/auth.service';\r\nimport { Admin } from './components/Admin';\r\n\r\ninterface AdminPageProps {\r\n\r\n}\r\n\r\nexport const AdminPage: React.FC<AdminPageProps> = ({}) => {\r\n\r\n    const {\r\n        data: articles,\r\n        isPending,\r\n        error\r\n    } = exportApiFetchs.FetchData(API_URL+\"articles\")\r\n\r\n    const {\r\n        data2: users,\r\n        isPending2,\r\n        error2\r\n    } = exportApiFetchs.FetchUsers(API_URL+\"users\")\r\n\r\n    /* console.log(articles) */\r\n    /* console.log(users) */\r\n\r\n    const user = exportAuthService.getCurrentUser()\r\n\r\n        return (\r\n            <div className=\"flex align-middle px-40\">\r\n                {error && <div>{error}</div>}\r\n                {isPending && <div>Loading...</div>}\r\n                {error2 && <div>{error2}</div>}\r\n                {isPending2 && <div>Loading...</div>}\r\n                { articles ? (\r\n                user && adminUsers.includes(user.user.username) ? (\r\n                <div className=\"flex flex-col w-full align-middle\">\r\n                    <p className=\"text-3xl pt-10 text-center\">AdminPage</p>\r\n                    <p className=\"text-md pt-1 pb-10\">You can edit or delete profiles and articles since you are an admin user</p>\r\n                    <Admin users={users} articles={articles} />\r\n                </div>\r\n                ) : (<p className=\"text-3xl\">Authorized access only</p>)\r\n                ):(\r\n                    <p className=\"text-3xl\">There are no articles found or something went wrong.</p>\r\n                )}\r\n            </div>\r\n        );\r\n}","import { Tooltip, Typography } from '@material-ui/core'\r\nimport React, { useEffect, useRef } from 'react'\r\nimport exportAuthService from '../../../../../services/auth.service'\r\nimport * as Yup from 'yup'\r\nimport { toast } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport { Link, useHistory, useParams } from 'react-router-dom'\r\nimport { Formik, Form, Field } from 'formik'\r\nimport exportApiFetchs from '../../../../../Api/API'\r\nimport { API_URL } from '../../../../../enviroment'\r\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\r\nimport { withStyles } from '@material-ui/styles'\r\n\r\ninterface EditArticleProps {\r\n    article: any;\r\n}\r\n\r\nexport const EditArticle: React.FC<EditArticleProps> = ({ article }) => {\r\n\r\n    const history = useHistory()\r\n    const formikRef = useRef(article)\r\n    const { slug } = useParams<{ slug?: string }>()\r\n\r\n    const validationSchema = Yup.object().shape({\r\n        title: Yup.string()\r\n            .required('Title is required')\r\n            .min(10, 'Title must be at least 10 characters')\r\n            .max(40, 'Description must not exceed 40 characters'),\r\n        description: Yup.string()\r\n            .required('Description is required')\r\n            .min(20, 'Description must be at least 20 characters')\r\n            .max(60, 'Description must not exceed 60 characters'),\r\n        body: Yup.string()\r\n            .required('Article body is required')\r\n            .min(40, 'Article body must be at least 40 characters')\r\n            .max(250, 'Article body must not exceed 250 characters'),\r\n        tagList: Yup.array(),\r\n        newTags: Yup.string()\r\n    })\r\n\r\n    const {\r\n        data2: tags,\r\n        error2,\r\n        isPending2\r\n    } = exportApiFetchs.FetchTagsData(API_URL + 'tags')\r\n\r\n    const onSubmit = (data: any) => {\r\n        const addNewTags = (newTags: string) => {\r\n            const newTagsArr = newTags.split(',')\r\n            newTagsArr.map((tag: any) => \r\n                exportAuthService.createTag(tag)\r\n            )\r\n        }\r\n        addNewTags(data.newTags)\r\n        const tagList = data.tagList\r\n        data.newTags.length > 0 && tagList.push(data.newTags)\r\n        exportAuthService\r\n            .editArticle(\r\n                slug,\r\n                data.title,\r\n                data.description,\r\n                data.body,\r\n                tagList\r\n            )\r\n            .then((response) => {\r\n                toast.success('Article updated successfully')\r\n                setTimeout(() => history.goBack(), 1000)\r\n            })\r\n            .catch((err) => {\r\n                toast.error('Something went wrong')\r\n            })\r\n    }\r\n\r\n    const CustomInputComponent = (props: any) => (\r\n        <textarea\r\n            className=\"resize-y max-h-52 min-h-32 my-custom-input\"\r\n            {...props}\r\n        />\r\n    )\r\n\r\n    const HtmlTooltip = withStyles((theme: any) => ({\r\n        tooltip: {\r\n            backgroundColor: '#363537',\r\n            color: '#F7F7F7',\r\n            maxWidth: 350,\r\n            fontSize: '1rem',\r\n            border: '1px solid #F7F7F7',\r\n        },\r\n    }))(Tooltip);\r\n\r\n    useEffect(() => {\r\n        if(formikRef.current)\r\n        {\r\n            formikRef.current.setFieldValue(\"title\", article.title)\r\n            formikRef.current.setFieldValue(\"description\", article.description)\r\n            formikRef.current.setFieldValue(\"body\", article.body)\r\n            formikRef.current.setFieldValue(\"tagList\", article.tagList)\r\n        }\r\n    })\r\n\r\n        return (\r\n            <div className=\"pt-20\">\r\n            <h1 className=\"text-2xl text-black\">Update Article</h1>\r\n            <p className=\"text-black-light\">Fill all the required(*) fields!</p>\r\n            {article ? (\r\n            <Formik\r\n                initialValues={{\r\n                    title: article.title,\r\n                    description: article.description,\r\n                    body: article.body,\r\n                    toggle: false,\r\n                    tagList: article.tagList,\r\n                    newTags: '',\r\n                }}\r\n                validationSchema={validationSchema}\r\n                onSubmit={onSubmit}\r\n                innerRef={formikRef}\r\n            >\r\n                { props => (\r\n                    <Form>\r\n                        {() => {\r\n                            props.setFieldValue(\"title\", article.title)\r\n                            props.setFieldValue(\"description\", article.description)\r\n                            props.setFieldValue(\"body\", article.body)\r\n                            props.setFieldValue(\"tagList\", article.tagList)\r\n                        }}\r\n                        <div className=\"grid grid-rows-5 grid-flow-col gap-4 auto-rows-max pt-10 px-40\">\r\n                            <div className=\"form-group\">\r\n                                <label className=\"inputLabel\">Title*</label>\r\n                                <Field name=\"title\" />\r\n                                {props.errors.title && props.touched.title ? (\r\n                                    <div className=\"invalid-feedback\">\r\n                                        {props.errors.title}\r\n                                    </div>\r\n                                ) : null}\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label className=\"inputLabel\">\r\n                                    Description*\r\n                                </label>\r\n                                <Field name=\"description\" />\r\n                                {props.errors.description && props.touched.description ? (\r\n                                    <div className=\"invalid-feedback\">\r\n                                        {props.errors.description}\r\n                                    </div>\r\n                                ) : null}\r\n                            </div>\r\n                            <div className=\"form-check\">\r\n                                <p className=\"text-left pb-2\">Tags (Optional)</p>\r\n                                <div\r\n                                    role=\"group\"\r\n                                    aria-labelledby=\"checkbox-group\"\r\n                                    className=\"form-check2\"\r\n                                >\r\n                                    {tags ? (\r\n                                        tags.map(\r\n                                            (item: any, i: number) =>\r\n                                                item.tag !== 'All' && (\r\n                                                    <div\r\n                                                        key={i}\r\n                                                        className=\"checkBoxText\"\r\n                                                    >\r\n                                                        <Field\r\n                                                            type=\"checkbox\"\r\n                                                            name=\"tagList\"\r\n                                                            value={item.tag}\r\n                                                        />\r\n                                                        <label htmlFor=\"checkbox\">\r\n                                                            {item.tag}\r\n                                                        </label>\r\n                                                    </div>\r\n                                                )\r\n                                        )\r\n                                    ) : (\r\n                                        <React.Fragment>\r\n                                            {error2 && <div>{error2}</div>}\r\n                                            {isPending2 && <div>Loading...</div>}\r\n                                        </React.Fragment>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label className=\"inputLabel\">\r\n                                    Add new tag (Optional)\r\n                                    <HtmlTooltip \r\n                                    title={\r\n                                        <React.Fragment>\r\n                                            <Typography className=\"font-bold\">\r\n                                                You can add one tag by typing:\r\n                                            </Typography>\r\n                                            <Typography className=\"text=\">\r\n                                                e.g: TagName\r\n                                            </Typography>\r\n                                            <Typography className=\"font-bold\">\r\n                                                or you can add 2 or more tags by typing:\r\n                                            </Typography>\r\n                                            <Typography className=\"text=\">\r\n                                                e.g: TagName,TagName2,TagName3\r\n                                            </Typography>\r\n                                        </React.Fragment>\r\n                                    }>\r\n                                        <InfoOutlinedIcon />\r\n                                    </HtmlTooltip>\r\n                                </label>\r\n                                <Field name=\"newTags\" />\r\n                            </div>\r\n                            <div className=\"form-group row-span-3\">\r\n                                <label className=\"inputLabel\">\r\n                                    Article Body*\r\n                                </label>\r\n                                <Field name=\"body\" as={CustomInputComponent} />\r\n                                {props.errors.body && props.touched.body ? (\r\n                                    <div className=\"invalid-feedback\">\r\n                                        {props.errors.body}\r\n                                    </div>\r\n                                ) : null}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"flex flex-col items-center justify-center space-y-10\">\r\n                            <button\r\n                                type=\"submit\"\r\n                                className=\"border-2 border-red rounded-md px-6 py-2 w-auto text-red font-bold hover:bg-red hover:text-white\"\r\n                            >\r\n                                Update Article\r\n                            </button>\r\n                            <Link to={'/articles/'+slug}>\r\n                                <button\r\n                                    className=\"border-2 border-red rounded-md px-6 py-2 w-auto text-red font-bold hover:bg-red hover:text-white\"\r\n                                >\r\n                                    Cancel\r\n                                </button>\r\n                            </Link>\r\n                        </div>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n            ) : (<p>Loading...</p>)}\r\n        </div>\r\n        );\r\n}","import React from 'react'\r\nimport { useParams } from 'react-router-dom';\r\nimport exportApiFetchs from '../../../../Api/API';\r\nimport { API_URL } from '../../../../enviroment';\r\nimport exportAuthService from '../../../../services/auth.service';\r\nimport { EditArticle } from './Components/EditArticle';\r\n\r\ninterface EditArticlePageProps {\r\n}\r\n\r\nexport const EditArticlePage: React.FC<EditArticlePageProps> = ({}) => {\r\n        \r\n    const { slug } = useParams<{slug?: string}>()\r\n\r\n    const {\r\n            data: article,\r\n            error,\r\n            isPending\r\n    } = exportApiFetchs.FetchArticleData(API_URL + 'articles/' + slug )\r\n\r\n    const user = exportAuthService.getCurrentUser()\r\n    \r\n    return (\r\n        <div>\r\n            {error && <div>{error}</div>}\r\n            {isPending && <div>Loading...</div>}\r\n            {user ? <EditArticle article={article} /> : <p className=\"text-3xl py-10\">Authorized access only!</p>}\r\n        </div>\r\n    );\r\n}","import React, { useEffect, useRef } from 'react'\r\nimport exportAuthService from '../../../../../services/auth.service'\r\nimport * as Yup from 'yup'\r\nimport { toast } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport { Link, useHistory, useParams } from 'react-router-dom'\r\nimport { Formik, Form, Field } from 'formik'\r\n\r\ninterface EditProfileProps {\r\n    users: any\r\n}\r\n\r\nexport const EditProfile: React.FC<EditProfileProps> = ({users}) => {\r\n\r\n\r\n    const history = useHistory()\r\n    const { username } = useParams<{ username?: string }>()\r\n    const user = users.find((u: any) => u.username === username)\r\n    const formikRef = useRef(user)\r\n\r\n    const validationSchema = Yup.object().shape({\r\n        username: Yup.string()\r\n            .required('Username is required')\r\n            .min(5, 'Username must be at least 5 characters')\r\n            .max(20, 'Username must not exceed 20 characters')\r\n            .test((username: any) => {\r\n                const userFound = users.find((u: any) => u.username === username)\r\n                if((userFound && user && (userFound.username !== null && userFound.username !== user.username))){\r\n                    return new Yup.ValidationError('Username already exists', undefined, 'username')\r\n                }\r\n                else\r\n                {\r\n                    return true\r\n                }\r\n            }),\r\n        email: Yup.string()\r\n            .required('Email is required')\r\n            .email('Email is invalid'),\r\n        bio: Yup.string()\r\n            .min(40, 'Bio must be at least 40 characters')\r\n            .max(150, 'Bio must not exceed 150 characters'),\r\n        image: Yup.string()\r\n    })\r\n\r\n    const onSubmit = (data: any) => {\r\n        exportAuthService\r\n            .editProfile(\r\n                data.username,\r\n                data.email,\r\n                data.bio,\r\n                data.image\r\n            )\r\n            .then((response) => {\r\n                toast.success(username+\"'s profile updated successfully\")\r\n                setTimeout(() => history.push('/profile/'+data.username), 1000)\r\n            })\r\n            .catch((err) => {\r\n                toast.error('Something went wrong')\r\n            })\r\n    }\r\n\r\n    const CustomInputComponent = (props: any) => (\r\n        <textarea\r\n            className=\"resize-y max-h-52 min-h-32 my-custom-input\"\r\n            {...props}\r\n        />\r\n    )\r\n\r\n    useEffect(() => {\r\n        if(formikRef.current)\r\n        {\r\n            formikRef.current.setFieldValue(\"username\", user.username);\r\n            formikRef.current.setFieldValue(\"email\", user.email)\r\n            formikRef.current.setFieldValue(\"bio\", user.bio)\r\n            formikRef.current.setFieldValue(\"image\", user.image)\r\n        }\r\n    })\r\n\r\n        return (\r\n            <div className=\"pt-20\">\r\n            <h1 className=\"text-2xl text-black\">Update Profile</h1>\r\n            <p className=\"text-black-light\">Fill all the required(*) fields!</p>\r\n            {user ? (\r\n            <Formik\r\n                initialValues={{\r\n                    username: user.username,\r\n                    email: user.email,\r\n                    bio: user.bio,\r\n                    image: user.image,\r\n                }}\r\n                validationSchema={validationSchema}\r\n                onSubmit={onSubmit}\r\n                innerRef={formikRef}\r\n            >\r\n                { props => (\r\n                    <Form>\r\n                        <div className=\"grid grid-rows-5 grid-flow-col gap-4 auto-rows-max pt-10 px-40\">\r\n                            <div className=\"form-group\">\r\n                                <label className=\"inputLabel\">Username</label>\r\n                                <Field disabled name=\"username\" />\r\n                                {props.errors.username && props.touched.username ? (\r\n                                    <div className=\"invalid-feedback\">\r\n                                        {props.errors.username}\r\n                                    </div>\r\n                                ) : null}\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label className=\"inputLabel\">\r\n                                    Email*\r\n                                </label>\r\n                                <Field name=\"email\" />\r\n                                {props.errors.email && props.touched.email ? (\r\n                                    <div className=\"invalid-feedback\">\r\n                                        {props.errors.email}\r\n                                    </div>\r\n                                ) : null}\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label className=\"inputLabel\">\r\n                                    Image\r\n                                </label>\r\n                                <Field name=\"image\" />\r\n                                {props.errors.image && props.touched.image ? (\r\n                                    <div className=\"invalid-feedback\">\r\n                                        {props.errors.image}\r\n                                    </div>\r\n                                ) : null}\r\n                            </div>\r\n                            <div className=\"form-group row-span-3\">\r\n                                <label className=\"inputLabel\">\r\n                                    Bio\r\n                                </label>\r\n                                <Field name=\"bio\" as={CustomInputComponent} />\r\n                                {props.errors.bio && props.touched.bio ? (\r\n                                    <div className=\"invalid-feedback\">\r\n                                        {props.errors.bio}\r\n                                    </div>\r\n                                ) : null}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"flex flex-col items-center justify-center space-y-10\">\r\n                            <button\r\n                                type=\"submit\"\r\n                                className=\"border-2 border-red rounded-md px-6 py-2 w-auto text-red font-bold hover:bg-red hover:text-white\"\r\n                            >\r\n                                Update Profile\r\n                            </button>\r\n                            <Link to={'/profile/'+username}>\r\n                                <button\r\n                                    className=\"border-2 border-red rounded-md px-6 py-2 w-auto text-red font-bold hover:bg-red hover:text-white\"\r\n                                >\r\n                                    Cancel\r\n                                </button>\r\n                            </Link>\r\n                        </div>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n            ) : (<p>Loading...</p>)}\r\n        </div>\r\n        );\r\n}","import React from 'react'\r\nimport exportApiFetchs from '../../../../Api/API';\r\nimport { API_URL } from '../../../../enviroment';\r\nimport { EditProfile } from './components/EditProfile';\r\n\r\ninterface EditProfilePageProps {\r\n\r\n}\r\n\r\nexport const EditProfilePage: React.FC<EditProfilePageProps> = ({}) => {\r\n    \r\n    const {\r\n        data2: users,\r\n        isPending2,\r\n        error2\r\n    } = exportApiFetchs.FetchUsers(API_URL+\"users\")\r\n    \r\n    return (\r\n            <div>\r\n                {error2 && <div>{error2}</div>}\r\n                {isPending2 && <div>Loading...</div>}\r\n                {users ? <EditProfile users={users} /> : <p className=\"text-2xl\">User not found or something went wrong.</p>}\r\n            </div>\r\n    );\r\n}","import { yupResolver } from '@hookform/resolvers/yup'\r\nimport React from 'react'\r\nimport * as Yup from 'yup'\r\nimport { useForm } from 'react-hook-form'\r\nimport exportAuthService from '../../../services/auth.service'\r\nimport { toast } from 'react-toastify'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\ninterface LoginProps {\r\n    submitFN: (data: any) => void;\r\n}\r\n\r\ntype UserSubmitForm = {\r\n    email: string\r\n    password: string\r\n}\r\n\r\nexport const Login: React.FC<LoginProps> = ({submitFN}) => {\r\n\r\n    const history = useHistory();\r\n    \r\n    const validationSchema = Yup.object().shape({\r\n        email: Yup.string()\r\n            .required('Email is required')\r\n            .email('Email is invalid'),\r\n        password: Yup.string()\r\n            .required('Password is required')\r\n            .min(6, 'Password must be at least 6 characters')\r\n            .max(20, 'Password must not exceed 20 characters')\r\n    })\r\n\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        formState: { errors }\r\n    } = useForm<UserSubmitForm>({\r\n        resolver: yupResolver(validationSchema)\r\n    })\r\n\r\n    const onSubmit = (data: UserSubmitForm) => {\r\n        submitFN(data)\r\n    }\r\n\r\n    const currentUser = exportAuthService.getCurrentUser()\r\n\r\n    return (\r\n        <div className=\"align-middle sm:mx-auto sm:w-full sm:max-w-md py-16\">\r\n            <div className=\"register-form bg-white-light py-8 px-6 shadow-lg rounded-lg\">\r\n                {!currentUser? (\r\n                <>\r\n                    <h1 className=\"text-4xl pt-2 pb-10 text-red\">Please Login!</h1>\r\n                    <form\r\n                        className=\"rounded align-middle space-y-4 bg-white-light\"\r\n                        onSubmit={handleSubmit(onSubmit)}\r\n                    >\r\n                        <div className=\"form-group\">\r\n                            <label className=\"inputLabel\">Email</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                {...register('email')}\r\n                                className={`form-control ${\r\n                                    errors.email ? 'is-invalid' : ''\r\n                                }`}\r\n                            />\r\n                            <div className=\"invalid-feedback\">\r\n                                {errors.email?.message}\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label className=\"inputLabel\">Password</label>\r\n                            <input\r\n                                type=\"password\"\r\n                                {...register('password')}\r\n                                className={`form-control ${\r\n                                    errors.password ? 'is-invalid' : ''\r\n                                }`}\r\n                            />\r\n                            <div className=\"invalid-feedback\">\r\n                                {errors.password?.message}\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"form-buttons\">\r\n                            <button type=\"submit\" className=\"btn btn-primary\">\r\n                                Login\r\n                            </button>\r\n                        </div>\r\n                    </form>\r\n                </>\r\n                ):(<h1>You already logged in!</h1>)}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport exportAuthService from '../../services/auth.service';\r\nimport { Login } from './Components/Login';\r\n\r\ninterface LoginPageProps {\r\n\r\n}\r\n\r\nexport const LoginPage: React.FC<LoginPageProps> = ({}) => {\r\n\r\n    const history = useHistory();\r\n\r\n    const submitFN = (data: any) => {\r\n        exportAuthService\r\n        .login(data.email, data.password)\r\n        .then((response) => {\r\n            history.push('/articles')\r\n            toast.success('Login successful')\r\n            setTimeout(() => window.location.reload(), 1500)\r\n        })\r\n        .catch((err) => {\r\n            toast.error('Something went wrong')\r\n        })\r\n    }\r\n        return (\r\n            <div>\r\n                <Login submitFN={submitFN} />\r\n            </div>\r\n        );\r\n}","import React from 'react';\nimport './App.css';\nimport { HomePage } from './components/Home/Home';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { Navbar } from './components/Navbar/Navbar';\nimport { RegisterPage } from './components/Register/RegisterPage';\nimport { ToastContainer } from 'react-toastify';\nimport { Profile } from './components/Profile/Profile';\nimport { ArticlesPage } from './components/Articles/ArticlesPage';\nimport { CreateArticlePage } from './components/Articles/components/CreateArticle/CreateArticlePage';\nimport NoMatch from './components/NoMatch';\nimport { ArticleDetailsPage } from './components/Articles/components/ArticleDetails/ArticleDetailsPage';\nimport { AdminPage } from './components/AdminPage/AdminPage';\nimport { EditArticlePage } from './components/Articles/components/EditArticle/EditArticlePage';\nimport { EditProfilePage } from './components/Profile/components/EditProfile/EditProfilePage';\nimport { LoginPage } from './components/Login/LoginPage';\n\ninterface AppProps {\n}\n\nconst App: React.FC<AppProps> = () => {\n    return (\n        <Router>\n            <div className=\"App\">\n                <Navbar />\n                <div className=\"content\">\n                    <Switch>\n                            <Route exact path=\"/\" component={HomePage} />\n                            <Route exact path=\"/register\" component={RegisterPage} />\n                            <Route exact path=\"/login\" component={LoginPage} />\n                            <Route exact path=\"/articles\" component={ArticlesPage} />\n                            <Route exact path=\"/articles/:slug\" component={ArticleDetailsPage} />\n                            <Route exact path=\"/articles/:slug/editArticle\" component={EditArticlePage} />\n                            <Route exact path=\"/profile/:username\" component={Profile} />\n                            <Route exact path=\"/profile/:username/editprofile\" component={EditProfilePage} />\n                            <Route exact path=\"/createArticle\" component={CreateArticlePage} />\n                            <Route exact path=\"/admin\" component={AdminPage} />\n                            <Route path=\"*\" component={NoMatch} />\n                    </Switch>\n                </div>\n                <ToastContainer />\n            </div>\n        </Router>\n    )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}